pkgname=minimserver

get_config() {
 RUN_USER=$(cat /usr/lib/systemd/system/${pkgname}.service|awk -F= '$1=="User"{print $2}')
 RUN_GROUP=$(cat /usr/lib/systemd/system/${pkgname}.service|awk -F= '$1=="Group"{print $2}')
 APP_DIR=$(cat /etc/conf.d/$pkgname|awk -F= '$1=="MINIM_HOME"{print $2}')
 DATA_DIR=$(cat /etc/conf.d/$pkgname|awk -F= '$1=="MINIM_DATA"{print $2}')
}

post_install() {
  get_config
  getent group $RUN_GROUP >/dev/null || groupadd $RUN_GROUP
  if [ ! $? -eq 0 ]
    then
    echo "FAILED TO CREATE '$RUN_GROUP' GROUP"
      exit 1
  fi
  getent passwd $RUN_USER >/dev/null || useradd --comment "$pkgname service account" --gid $RUN_GROUP --home-dir $DATA_DIR --system --no-create-home --shell /bin/false $RUN_USER
  if [ ! $? -eq 0 ]
    then
    echo "FAILED TO CREATE '$RUN_USER' USERID"
      exit 1
  fi
  chown -R $RUN_USER:$RUN_GROUP $DATA_DIR  
  chown -R $RUN_USER $APP_DIR/tmp
  chown -R $RUN_USER $APP_DIR/libext
  systemctl --system daemon-reload
  echo "
========================================================================

$pkgname runs under systemd using a dedicated service account '$RUN_USER'

systemd services are controlled using 'systemctl' subcommands, most of
which require elevated permission to execute, although the service itself 
is run with limited access.

To start $pkgname 
  # sudo systemctl start $pkgname

To enable $pkgname to automatically start up at boot:
  # sudo systemctl enable $pkgname
  
Check the current status with:
  # systemctl status $pkgname

To stop $pkgname, you issue the systemctl command:
  # sudo systemctl stop $pkgname

To restart $pkgname:
  # systemctl restart $pkgname

Application specific documentation is available at:
	${url}
	    
	    
To complete the configuration once the service has been started, point
your web browser to:
  http://localhost:9790

========================================================================
"
}


pre_upgrade() {
  systemctl stop $pkgname
}

post_upgrade() {
  systemctl --system daemon-reload
  systemctl restart $pkgname
}
